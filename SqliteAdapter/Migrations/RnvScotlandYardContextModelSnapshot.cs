// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace SqliteAdapter.Migrations
{
    [DbContext(typeof(RnvScotlandYardContext))]
    partial class RnvScotlandYardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("SqliteAdapter.GameSessionDb", b =>
                {
                    b.Property<int>("GameSessionId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("GameSessionId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("SqliteAdapter.MovementsDb", b =>
                {
                    b.Property<string>("MovementId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FromStationId");

                    b.Property<string>("ToStationId");

                    b.Property<int>("VehicleTypeId");

                    b.HasKey("MovementId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("SqliteAdapter.MrxDb", b =>
                {
                    b.Property<string>("MrxId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GameSessionDbGameSessionId");

                    b.Property<string>("Name");

                    b.Property<string>("TicketPoolDbTicketPoolId");

                    b.HasKey("MrxId");

                    b.HasIndex("GameSessionDbGameSessionId");

                    b.HasIndex("TicketPoolDbTicketPoolId");

                    b.ToTable("MrXs");
                });

            modelBuilder.Entity("SqliteAdapter.PoliceOfficerDb", b =>
                {
                    b.Property<string>("PoliceOfficerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GameSessionDbGameSessionId");

                    b.Property<string>("Name");

                    b.Property<string>("TicketPoolDbTicketPoolId");

                    b.HasKey("PoliceOfficerId");

                    b.HasIndex("GameSessionDbGameSessionId");

                    b.HasIndex("TicketPoolDbTicketPoolId");

                    b.ToTable("PoliceOfficers");
                });

            modelBuilder.Entity("SqliteAdapter.TicketPoolDb", b =>
                {
                    b.Property<string>("TicketPoolId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlackTickets");

                    b.Property<int>("BusTickets");

                    b.Property<int>("DoubleTickets");

                    b.Property<int>("MetroTickets");

                    b.Property<int>("TaxiTickets");

                    b.HasKey("TicketPoolId");

                    b.ToTable("TicketPools");
                });

            modelBuilder.Entity("SqliteAdapter.VehicleTypeDb", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("VehicleType");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("SqliteAdapter.MovementsDb", b =>
                {
                    b.HasOne("SqliteAdapter.VehicleTypeDb", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SqliteAdapter.MrxDb", b =>
                {
                    b.HasOne("SqliteAdapter.GameSessionDb", "GameSessionDb")
                        .WithMany("Mrx")
                        .HasForeignKey("GameSessionDbGameSessionId");

                    b.HasOne("SqliteAdapter.TicketPoolDb", "TicketPoolDb")
                        .WithMany()
                        .HasForeignKey("TicketPoolDbTicketPoolId");
                });

            modelBuilder.Entity("SqliteAdapter.PoliceOfficerDb", b =>
                {
                    b.HasOne("SqliteAdapter.GameSessionDb", "GameSessionDb")
                        .WithMany("PoliceOfficers")
                        .HasForeignKey("GameSessionDbGameSessionId");

                    b.HasOne("SqliteAdapter.TicketPoolDb", "TicketPoolDb")
                        .WithMany()
                        .HasForeignKey("TicketPoolDbTicketPoolId");
                });
#pragma warning restore 612, 618
        }
    }
}
